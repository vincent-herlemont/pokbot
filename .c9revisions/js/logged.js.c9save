{"ts":1381420414486,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var XHR = function(method, ad, params) {\r\n\tvar xhr = new XMLHttpRequest();\r\n\txhr.onload = params.onload || null;\r\n\txhr.open(method, ad);\r\n\tif(method == 'POST') {xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');}\r\n\tvar variables   = params.variables || null\r\n\t  , str\t\t\t= '';\r\n\tfor(var i in variables) {\r\n\t\t str += i + '=' + encodeURIComponent( variables[i] ) + '&';\r\n\t\t}\r\n\txhr.send( str );\r\n}\r\n\r\nfunction init() {\r\n\t// Connect to the SocketIO server to retrieve ongoing games.\r\n\tsocket = io.connect();\r\n\tsocket.on('participants', function(data) {\r\n\t\t var ul = document.getElementById('lesParticipants');\r\n\t\t ul.innerHTML='';\r\n\t\t for(p in data.participants) {\r\n\t\t\t var li = document.createElement('li'); \r\n\t\t\t ul.appendChild( li );\r\n\t\t\t li.appendChild( document.createTextNode( data.participants[p] ) );\r\n\t\t\t}\r\n\t\t});\r\n\tsocket.on('FinalCountDown'\t, function(data) {\r\n\t\t var ms   = data.FinalCountDown;\r\n\t\t console.log(\"FinalCountDown : \" + ms);\r\n\t\t});\r\n\tsocket.on('TerminateGame'\t, function(data) {\r\n\t\t h1 = document.querySelector('body > header > h1');\r\n\t\t h1.innerHTML += ' est termin√©e !';\r\n\t\t});\r\n\tsocket.on('solutions'\t\t, function(data) {\r\n\t\t console.log(\"Solutions are :\\n\"+JSON.stringify(data.solutions));\r\n\t\t});\r\n\tsocket.emit ('identification', \t{ login\t: document.getElementById('login').value\r\n\t\t\t\t\t\t\t\t\t, idGame: document.getElementById('idGame').value}\r\n\t\t\t\t);\r\n}\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1401}]],"length":1401}
{"contributors":[],"silentsave":false,"ts":1381424848748,"patch":[[{"diffs":[[0," );\r\n}\r\n"],[1,"console.log(\"test\");"],[0,"\r\nfuncti"]],"start1":411,"start2":411,"length1":16,"length2":36}]],"length":1421,"saved":false}
